{"version":3,"file":"index-CxElyJDj.js","sources":["../../node_modules/three/examples/jsm/controls/OrbitControls.js","../../node_modules/three/examples/jsm/loaders/RGBELoader.js","../../src/entities/Earth/Earth.js","../../src/entities/Starfield/Starfield.js","../../src/entities/SunGlow/SunGlow.js","../../src/core/SceneManager.js","../../src/main.js"],"sourcesContent":["import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3,\n\tPlane,\n\tRay,\n\tMathUtils\n} from 'three';\n\n// OrbitControls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\nconst _ray = new Ray();\nconst _plane = new Plane();\nconst TILT_LIMIT = Math.cos( 70 * MathUtils.DEG2RAD );\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// Sets the 3D cursor (similar to Blender), from which the maxTargetRadius takes effect\n\t\tthis.cursor = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// Limit camera target within a spherical area around the cursor\n\t\tthis.minTargetRadius = 0;\n\t\tthis.maxTargetRadius = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\t\tthis.zoomToCursor = false;\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.stopListenToKeyEvents = function () {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\t\t\tconst lastTargetPosition = new Vector3();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update( deltaTime = null ) {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle( deltaTime ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\t// Limit the target distance from the cursor to create a sphere around the center of interest\n\t\t\t\tscope.target.sub( scope.cursor );\n\t\t\t\tscope.target.clampLength( scope.minTargetRadius, scope.maxTargetRadius );\n\t\t\t\tscope.target.add( scope.cursor );\n\n\t\t\t\tlet zoomChanged = false;\n\t\t\t\t// adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\n\t\t\t\t// we adjust zoom later in these cases\n\t\t\t\tif ( scope.zoomToCursor && performCursorZoom || scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\tspherical.radius = clampDistance( spherical.radius );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst prevRadius = spherical.radius;\n\t\t\t\t\tspherical.radius = clampDistance( spherical.radius * scale );\n\t\t\t\t\tzoomChanged = prevRadius != spherical.radius;\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t// adjust camera position\n\t\t\t\tif ( scope.zoomToCursor && performCursorZoom ) {\n\n\t\t\t\t\tlet newRadius = null;\n\t\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t\t// move the camera down the pointer ray\n\t\t\t\t\t\t// this method avoids floating point error\n\t\t\t\t\t\tconst prevRadius = offset.length();\n\t\t\t\t\t\tnewRadius = clampDistance( prevRadius * scale );\n\n\t\t\t\t\t\tconst radiusDelta = prevRadius - newRadius;\n\t\t\t\t\t\tscope.object.position.addScaledVector( dollyDirection, radiusDelta );\n\t\t\t\t\t\tscope.object.updateMatrixWorld();\n\n\t\t\t\t\t\tzoomChanged = !! radiusDelta;\n\n\t\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t\t// adjust the ortho camera position based on zoom changes\n\t\t\t\t\t\tconst mouseBefore = new Vector3( mouse.x, mouse.y, 0 );\n\t\t\t\t\t\tmouseBefore.unproject( scope.object );\n\n\t\t\t\t\t\tconst prevZoom = scope.object.zoom;\n\t\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / scale ) );\n\t\t\t\t\t\tscope.object.updateProjectionMatrix();\n\n\t\t\t\t\t\tzoomChanged = prevZoom !== scope.object.zoom;\n\n\t\t\t\t\t\tconst mouseAfter = new Vector3( mouse.x, mouse.y, 0 );\n\t\t\t\t\t\tmouseAfter.unproject( scope.object );\n\n\t\t\t\t\t\tscope.object.position.sub( mouseAfter ).add( mouseBefore );\n\t\t\t\t\t\tscope.object.updateMatrixWorld();\n\n\t\t\t\t\t\tnewRadius = offset.length();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.' );\n\t\t\t\t\t\tscope.zoomToCursor = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// handle the placement of the target\n\t\t\t\t\tif ( newRadius !== null ) {\n\n\t\t\t\t\t\tif ( this.screenSpacePanning ) {\n\n\t\t\t\t\t\t\t// position the orbit target in front of the new camera position\n\t\t\t\t\t\t\tscope.target.set( 0, 0, - 1 )\n\t\t\t\t\t\t\t\t.transformDirection( scope.object.matrix )\n\t\t\t\t\t\t\t\t.multiplyScalar( newRadius )\n\t\t\t\t\t\t\t\t.add( scope.object.position );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// get the ray and translation plane to compute target\n\t\t\t\t\t\t\t_ray.origin.copy( scope.object.position );\n\t\t\t\t\t\t\t_ray.direction.set( 0, 0, - 1 ).transformDirection( scope.object.matrix );\n\n\t\t\t\t\t\t\t// if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\n\t\t\t\t\t\t\t// extremely large values\n\t\t\t\t\t\t\tif ( Math.abs( scope.object.up.dot( _ray.direction ) ) < TILT_LIMIT ) {\n\n\t\t\t\t\t\t\t\tobject.lookAt( scope.target );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t_plane.setFromNormalAndCoplanarPoint( scope.object.up, scope.target );\n\t\t\t\t\t\t\t\t_ray.intersectPlane( _plane, scope.target );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\tconst prevZoom = scope.object.zoom;\n\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / scale ) );\n\n\t\t\t\t\tif ( prevZoom !== scope.object.zoom ) {\n\n\t\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\t\tzoomChanged = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\t\t\t\tperformCursorZoom = false;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ||\n\t\t\t\t\tlastTargetPosition.distanceToSquared( scope.target ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tlastTargetPosition.copy( scope.target );\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerUp );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\tconst document = scope.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\t\tdocument.removeEventListener( 'keydown', interceptControlDown, { capture: true } );\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\t\tscope._domElementKeyEvents = null;\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst dollyDirection = new Vector3();\n\t\tconst mouse = new Vector2();\n\t\tlet performCursorZoom = false;\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tlet controlActive = false;\n\n\t\tfunction getAutoRotationAngle( deltaTime ) {\n\n\t\t\tif ( deltaTime !== null ) {\n\n\t\t\t\treturn ( 2 * Math.PI / 60 * scope.autoRotateSpeed ) * deltaTime;\n\n\t\t\t} else {\n\n\t\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getZoomScale( delta ) {\n\n\t\t\tconst normalizedDelta = Math.abs( delta * 0.01 );\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed * normalizedDelta );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateZoomParameters( x, y ) {\n\n\t\t\tif ( ! scope.zoomToCursor ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tperformCursorZoom = true;\n\n\t\t\tconst rect = scope.domElement.getBoundingClientRect();\n\t\t\tconst dx = x - rect.left;\n\t\t\tconst dy = y - rect.top;\n\t\t\tconst w = rect.width;\n\t\t\tconst h = rect.height;\n\n\t\t\tmouse.x = ( dx / w ) * 2 - 1;\n\t\t\tmouse.y = - ( dy / h ) * 2 + 1;\n\n\t\t\tdollyDirection.set( mouse.x, mouse.y, 1 ).unproject( scope.object ).sub( scope.object.position ).normalize();\n\n\t\t}\n\n\t\tfunction clampDistance( dist ) {\n\n\t\t\treturn Math.max( scope.minDistance, Math.min( scope.maxDistance, dist ) );\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tupdateZoomParameters( event.clientX, event.clientX );\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale( dollyDelta.y ) );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale( dollyDelta.y ) );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tupdateZoomParameters( event.clientX, event.clientY );\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale( event.deltaY ) );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale( event.deltaY ) );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan( event );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tconst centerX = ( event.pageX + position.x ) * 0.5;\n\t\t\tconst centerY = ( event.pageY + position.y ) * 0.5;\n\n\t\t\tupdateZoomParameters( centerX, centerY );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( isTrackingPointer( event ) ) return;\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tscope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tconst pointerId = pointers[ 0 ];\n\t\t\t\t\tconst position = pointerPositions[ pointerId ];\n\n\t\t\t\t\t// minimal placeholder event - allows state correction on pointer-up\n\t\t\t\t\tonTouchStart( { pointerId: pointerId, pageX: position.x, pageY: position.y } );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( customWheelEvent( event ) );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction customWheelEvent( event ) {\n\n\t\t\tconst mode = event.deltaMode;\n\n\t\t\t// minimal wheel event altered to meet delta-zoom demand\n\t\t\tconst newEvent = {\n\t\t\t\tclientX: event.clientX,\n\t\t\t\tclientY: event.clientY,\n\t\t\t\tdeltaY: event.deltaY,\n\t\t\t};\n\n\t\t\tswitch ( mode ) {\n\n\t\t\t\tcase 1: // LINE_MODE\n\t\t\t\t\tnewEvent.deltaY *= 16;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2: // PAGE_MODE\n\t\t\t\t\tnewEvent.deltaY *= 100;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\t// detect if event was triggered by pinching\n\t\t\tif ( event.ctrlKey && ! controlActive ) {\n\n\t\t\t\tnewEvent.deltaY *= 10;\n\n\t\t\t}\n\n\t\t\treturn newEvent;\n\n\t\t}\n\n\t\tfunction interceptControlDown( event ) {\n\n\t\t\tif ( event.key === 'Control' ) {\n\n\t\t\t\tcontrolActive = true;\n\n\n\t\t\t\tconst document = scope.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\t\t\tdocument.addEventListener( 'keyup', interceptControlUp, { passive: true, capture: true } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction interceptControlUp( event ) {\n\n\t\t\tif ( event.key === 'Control' ) {\n\n\t\t\t\tcontrolActive = false;\n\n\n\t\t\t\tconst document = scope.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\t\t\tdocument.removeEventListener( 'keyup', interceptControlUp, { passive: true, capture: true } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event.pointerId );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ] == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction isTrackingPointer( event ) {\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ] == event.pointerId ) return true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointerId = ( event.pointerId === pointers[ 0 ] ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerUp );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\tconst document = scope.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\tdocument.addEventListener( 'keydown', interceptControlDown, { passive: true, capture: true } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\nexport { OrbitControls };\n","import {\n\tDataTextureLoader,\n\tDataUtils,\n\tFloatType,\n\tHalfFloatType,\n\tLinearFilter,\n\tLinearSRGBColorSpace\n} from 'three';\n\n// https://github.com/mrdoob/three.js/issues/5552\n// http://en.wikipedia.org/wiki/RGBE_image_format\n\nclass RGBELoader extends DataTextureLoader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.type = HalfFloatType;\n\n\t}\n\n\t// adapted from http://www.graphics.cornell.edu/~bjw/rgbe.html\n\n\tparse( buffer ) {\n\n\t\tconst\n\t\t\t/* default error routine.  change this to change error handling */\n\t\t\trgbe_read_error = 1,\n\t\t\trgbe_write_error = 2,\n\t\t\trgbe_format_error = 3,\n\t\t\trgbe_memory_error = 4,\n\t\t\trgbe_error = function ( rgbe_error_code, msg ) {\n\n\t\t\t\tswitch ( rgbe_error_code ) {\n\n\t\t\t\t\tcase rgbe_read_error: throw new Error( 'THREE.RGBELoader: Read Error: ' + ( msg || '' ) );\n\t\t\t\t\tcase rgbe_write_error: throw new Error( 'THREE.RGBELoader: Write Error: ' + ( msg || '' ) );\n\t\t\t\t\tcase rgbe_format_error: throw new Error( 'THREE.RGBELoader: Bad File Format: ' + ( msg || '' ) );\n\t\t\t\t\tdefault:\n\t\t\t\t\tcase rgbe_memory_error: throw new Error( 'THREE.RGBELoader: Memory Error: ' + ( msg || '' ) );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\t/* offsets to red, green, and blue components in a data (float) pixel */\n\t\t\t//RGBE_DATA_RED = 0,\n\t\t\t//RGBE_DATA_GREEN = 1,\n\t\t\t//RGBE_DATA_BLUE = 2,\n\n\t\t\t/* number of floats per pixel, use 4 since stored in rgba image format */\n\t\t\t//RGBE_DATA_SIZE = 4,\n\n\t\t\t/* flags indicating which fields in an rgbe_header_info are valid */\n\t\t\tRGBE_VALID_PROGRAMTYPE = 1,\n\t\t\tRGBE_VALID_FORMAT = 2,\n\t\t\tRGBE_VALID_DIMENSIONS = 4,\n\n\t\t\tNEWLINE = '\\n',\n\n\t\t\tfgets = function ( buffer, lineLimit, consume ) {\n\n\t\t\t\tconst chunkSize = 128;\n\n\t\t\t\tlineLimit = ! lineLimit ? 1024 : lineLimit;\n\t\t\t\tlet p = buffer.pos,\n\t\t\t\t\ti = - 1, len = 0, s = '',\n\t\t\t\t\tchunk = String.fromCharCode.apply( null, new Uint16Array( buffer.subarray( p, p + chunkSize ) ) );\n\n\t\t\t\twhile ( ( 0 > ( i = chunk.indexOf( NEWLINE ) ) ) && ( len < lineLimit ) && ( p < buffer.byteLength ) ) {\n\n\t\t\t\t\ts += chunk; len += chunk.length;\n\t\t\t\t\tp += chunkSize;\n\t\t\t\t\tchunk += String.fromCharCode.apply( null, new Uint16Array( buffer.subarray( p, p + chunkSize ) ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( - 1 < i ) {\n\n\t\t\t\t\t/*for (i=l-1; i>=0; i--) {\n\t\t\t\t\t\tbyteCode = m.charCodeAt(i);\n\t\t\t\t\t\tif (byteCode > 0x7f && byteCode <= 0x7ff) byteLen++;\n\t\t\t\t\t\telse if (byteCode > 0x7ff && byteCode <= 0xffff) byteLen += 2;\n\t\t\t\t\t\tif (byteCode >= 0xDC00 && byteCode <= 0xDFFF) i--; //trail surrogate\n\t\t\t\t\t}*/\n\t\t\t\t\tif ( false !== consume ) buffer.pos += len + i + 1;\n\t\t\t\t\treturn s + chunk.slice( 0, i );\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t},\n\n\t\t\t/* minimal header reading.  modify if you want to parse more information */\n\t\t\tRGBE_ReadHeader = function ( buffer ) {\n\n\n\t\t\t\t// regexes to parse header info fields\n\t\t\t\tconst magic_token_re = /^#\\?(\\S+)/,\n\t\t\t\t\tgamma_re = /^\\s*GAMMA\\s*=\\s*(\\d+(\\.\\d+)?)\\s*$/,\n\t\t\t\t\texposure_re = /^\\s*EXPOSURE\\s*=\\s*(\\d+(\\.\\d+)?)\\s*$/,\n\t\t\t\t\tformat_re = /^\\s*FORMAT=(\\S+)\\s*$/,\n\t\t\t\t\tdimensions_re = /^\\s*\\-Y\\s+(\\d+)\\s+\\+X\\s+(\\d+)\\s*$/,\n\n\t\t\t\t\t// RGBE format header struct\n\t\t\t\t\theader = {\n\n\t\t\t\t\t\tvalid: 0, /* indicate which fields are valid */\n\n\t\t\t\t\t\tstring: '', /* the actual header string */\n\n\t\t\t\t\t\tcomments: '', /* comments found in header */\n\n\t\t\t\t\t\tprogramtype: 'RGBE', /* listed at beginning of file to identify it after \"#?\". defaults to \"RGBE\" */\n\n\t\t\t\t\t\tformat: '', /* RGBE format, default 32-bit_rle_rgbe */\n\n\t\t\t\t\t\tgamma: 1.0, /* image has already been gamma corrected with given gamma. defaults to 1.0 (no correction) */\n\n\t\t\t\t\t\texposure: 1.0, /* a value of 1.0 in an image corresponds to <exposure> watts/steradian/m^2. defaults to 1.0 */\n\n\t\t\t\t\t\twidth: 0, height: 0 /* image dimensions, width/height */\n\n\t\t\t\t\t};\n\n\t\t\t\tlet line, match;\n\n\t\t\t\tif ( buffer.pos >= buffer.byteLength || ! ( line = fgets( buffer ) ) ) {\n\n\t\t\t\t\trgbe_error( rgbe_read_error, 'no header found' );\n\n\t\t\t\t}\n\n\t\t\t\t/* if you want to require the magic token then uncomment the next line */\n\t\t\t\tif ( ! ( match = line.match( magic_token_re ) ) ) {\n\n\t\t\t\t\trgbe_error( rgbe_format_error, 'bad initial token' );\n\n\t\t\t\t}\n\n\t\t\t\theader.valid |= RGBE_VALID_PROGRAMTYPE;\n\t\t\t\theader.programtype = match[ 1 ];\n\t\t\t\theader.string += line + '\\n';\n\n\t\t\t\twhile ( true ) {\n\n\t\t\t\t\tline = fgets( buffer );\n\t\t\t\t\tif ( false === line ) break;\n\t\t\t\t\theader.string += line + '\\n';\n\n\t\t\t\t\tif ( '#' === line.charAt( 0 ) ) {\n\n\t\t\t\t\t\theader.comments += line + '\\n';\n\t\t\t\t\t\tcontinue; // comment line\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( gamma_re ) ) {\n\n\t\t\t\t\t\theader.gamma = parseFloat( match[ 1 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( exposure_re ) ) {\n\n\t\t\t\t\t\theader.exposure = parseFloat( match[ 1 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( format_re ) ) {\n\n\t\t\t\t\t\theader.valid |= RGBE_VALID_FORMAT;\n\t\t\t\t\t\theader.format = match[ 1 ];//'32-bit_rle_rgbe';\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( dimensions_re ) ) {\n\n\t\t\t\t\t\theader.valid |= RGBE_VALID_DIMENSIONS;\n\t\t\t\t\t\theader.height = parseInt( match[ 1 ], 10 );\n\t\t\t\t\t\theader.width = parseInt( match[ 2 ], 10 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( header.valid & RGBE_VALID_FORMAT ) && ( header.valid & RGBE_VALID_DIMENSIONS ) ) break;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! ( header.valid & RGBE_VALID_FORMAT ) ) {\n\n\t\t\t\t\trgbe_error( rgbe_format_error, 'missing format specifier' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! ( header.valid & RGBE_VALID_DIMENSIONS ) ) {\n\n\t\t\t\t\trgbe_error( rgbe_format_error, 'missing image size specifier' );\n\n\t\t\t\t}\n\n\t\t\t\treturn header;\n\n\t\t\t},\n\n\t\t\tRGBE_ReadPixels_RLE = function ( buffer, w, h ) {\n\n\t\t\t\tconst scanline_width = w;\n\n\t\t\t\tif (\n\t\t\t\t\t// run length encoding is not allowed so read flat\n\t\t\t\t\t( ( scanline_width < 8 ) || ( scanline_width > 0x7fff ) ) ||\n\t\t\t\t\t// this file is not run length encoded\n\t\t\t\t\t( ( 2 !== buffer[ 0 ] ) || ( 2 !== buffer[ 1 ] ) || ( buffer[ 2 ] & 0x80 ) )\n\t\t\t\t) {\n\n\t\t\t\t\t// return the flat buffer\n\t\t\t\t\treturn new Uint8Array( buffer );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scanline_width !== ( ( buffer[ 2 ] << 8 ) | buffer[ 3 ] ) ) {\n\n\t\t\t\t\trgbe_error( rgbe_format_error, 'wrong scanline width' );\n\n\t\t\t\t}\n\n\t\t\t\tconst data_rgba = new Uint8Array( 4 * w * h );\n\n\t\t\t\tif ( ! data_rgba.length ) {\n\n\t\t\t\t\trgbe_error( rgbe_memory_error, 'unable to allocate buffer space' );\n\n\t\t\t\t}\n\n\t\t\t\tlet offset = 0, pos = 0;\n\n\t\t\t\tconst ptr_end = 4 * scanline_width;\n\t\t\t\tconst rgbeStart = new Uint8Array( 4 );\n\t\t\t\tconst scanline_buffer = new Uint8Array( ptr_end );\n\t\t\t\tlet num_scanlines = h;\n\n\t\t\t\t// read in each successive scanline\n\t\t\t\twhile ( ( num_scanlines > 0 ) && ( pos < buffer.byteLength ) ) {\n\n\t\t\t\t\tif ( pos + 4 > buffer.byteLength ) {\n\n\t\t\t\t\t\trgbe_error( rgbe_read_error );\n\n\t\t\t\t\t}\n\n\t\t\t\t\trgbeStart[ 0 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 1 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 2 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 3 ] = buffer[ pos ++ ];\n\n\t\t\t\t\tif ( ( 2 != rgbeStart[ 0 ] ) || ( 2 != rgbeStart[ 1 ] ) || ( ( ( rgbeStart[ 2 ] << 8 ) | rgbeStart[ 3 ] ) != scanline_width ) ) {\n\n\t\t\t\t\t\trgbe_error( rgbe_format_error, 'bad rgbe scanline format' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// read each of the four channels for the scanline into the buffer\n\t\t\t\t\t// first red, then green, then blue, then exponent\n\t\t\t\t\tlet ptr = 0, count;\n\n\t\t\t\t\twhile ( ( ptr < ptr_end ) && ( pos < buffer.byteLength ) ) {\n\n\t\t\t\t\t\tcount = buffer[ pos ++ ];\n\t\t\t\t\t\tconst isEncodedRun = count > 128;\n\t\t\t\t\t\tif ( isEncodedRun ) count -= 128;\n\n\t\t\t\t\t\tif ( ( 0 === count ) || ( ptr + count > ptr_end ) ) {\n\n\t\t\t\t\t\t\trgbe_error( rgbe_format_error, 'bad scanline data' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( isEncodedRun ) {\n\n\t\t\t\t\t\t\t// a (encoded) run of the same value\n\t\t\t\t\t\t\tconst byteValue = buffer[ pos ++ ];\n\t\t\t\t\t\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\t\t\t\t\t\tscanline_buffer[ ptr ++ ] = byteValue;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//ptr += count;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// a literal-run\n\t\t\t\t\t\t\tscanline_buffer.set( buffer.subarray( pos, pos + count ), ptr );\n\t\t\t\t\t\t\tptr += count; pos += count;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\t// now convert data from buffer into rgba\n\t\t\t\t\t// first red, then green, then blue, then exponent (alpha)\n\t\t\t\t\tconst l = scanline_width; //scanline_buffer.byteLength;\n\t\t\t\t\tfor ( let i = 0; i < l; i ++ ) {\n\n\t\t\t\t\t\tlet off = 0;\n\t\t\t\t\t\tdata_rgba[ offset ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 1 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 2 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 3 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toffset += 4;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnum_scanlines --;\n\n\t\t\t\t}\n\n\t\t\t\treturn data_rgba;\n\n\t\t\t};\n\n\t\tconst RGBEByteToRGBFloat = function ( sourceArray, sourceOffset, destArray, destOffset ) {\n\n\t\t\tconst e = sourceArray[ sourceOffset + 3 ];\n\t\t\tconst scale = Math.pow( 2.0, e - 128.0 ) / 255.0;\n\n\t\t\tdestArray[ destOffset + 0 ] = sourceArray[ sourceOffset + 0 ] * scale;\n\t\t\tdestArray[ destOffset + 1 ] = sourceArray[ sourceOffset + 1 ] * scale;\n\t\t\tdestArray[ destOffset + 2 ] = sourceArray[ sourceOffset + 2 ] * scale;\n\t\t\tdestArray[ destOffset + 3 ] = 1;\n\n\t\t};\n\n\t\tconst RGBEByteToRGBHalf = function ( sourceArray, sourceOffset, destArray, destOffset ) {\n\n\t\t\tconst e = sourceArray[ sourceOffset + 3 ];\n\t\t\tconst scale = Math.pow( 2.0, e - 128.0 ) / 255.0;\n\n\t\t\t// clamping to 65504, the maximum representable value in float16\n\t\t\tdestArray[ destOffset + 0 ] = DataUtils.toHalfFloat( Math.min( sourceArray[ sourceOffset + 0 ] * scale, 65504 ) );\n\t\t\tdestArray[ destOffset + 1 ] = DataUtils.toHalfFloat( Math.min( sourceArray[ sourceOffset + 1 ] * scale, 65504 ) );\n\t\t\tdestArray[ destOffset + 2 ] = DataUtils.toHalfFloat( Math.min( sourceArray[ sourceOffset + 2 ] * scale, 65504 ) );\n\t\t\tdestArray[ destOffset + 3 ] = DataUtils.toHalfFloat( 1 );\n\n\t\t};\n\n\t\tconst byteArray = new Uint8Array( buffer );\n\t\tbyteArray.pos = 0;\n\t\tconst rgbe_header_info = RGBE_ReadHeader( byteArray );\n\n\t\tconst w = rgbe_header_info.width,\n\t\t\th = rgbe_header_info.height,\n\t\t\timage_rgba_data = RGBE_ReadPixels_RLE( byteArray.subarray( byteArray.pos ), w, h );\n\n\n\t\tlet data, type;\n\t\tlet numElements;\n\n\t\tswitch ( this.type ) {\n\n\t\t\tcase FloatType:\n\n\t\t\t\tnumElements = image_rgba_data.length / 4;\n\t\t\t\tconst floatArray = new Float32Array( numElements * 4 );\n\n\t\t\t\tfor ( let j = 0; j < numElements; j ++ ) {\n\n\t\t\t\t\tRGBEByteToRGBFloat( image_rgba_data, j * 4, floatArray, j * 4 );\n\n\t\t\t\t}\n\n\t\t\t\tdata = floatArray;\n\t\t\t\ttype = FloatType;\n\t\t\t\tbreak;\n\n\t\t\tcase HalfFloatType:\n\n\t\t\t\tnumElements = image_rgba_data.length / 4;\n\t\t\t\tconst halfArray = new Uint16Array( numElements * 4 );\n\n\t\t\t\tfor ( let j = 0; j < numElements; j ++ ) {\n\n\t\t\t\t\tRGBEByteToRGBHalf( image_rgba_data, j * 4, halfArray, j * 4 );\n\n\t\t\t\t}\n\n\t\t\t\tdata = halfArray;\n\t\t\t\ttype = HalfFloatType;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tthrow new Error( 'THREE.RGBELoader: Unsupported type: ' + this.type );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\treturn {\n\t\t\twidth: w, height: h,\n\t\t\tdata: data,\n\t\t\theader: rgbe_header_info.string,\n\t\t\tgamma: rgbe_header_info.gamma,\n\t\t\texposure: rgbe_header_info.exposure,\n\t\t\ttype: type\n\t\t};\n\n\t}\n\n\tsetDataType( value ) {\n\n\t\tthis.type = value;\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tfunction onLoadCallback( texture, texData ) {\n\n\t\t\tswitch ( texture.type ) {\n\n\t\t\t\tcase FloatType:\n\t\t\t\tcase HalfFloatType:\n\n\t\t\t\t\ttexture.colorSpace = LinearSRGBColorSpace;\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\ttexture.magFilter = LinearFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = true;\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}\n\n\t\treturn super.load( url, onLoadCallback, onProgress, onError );\n\n\t}\n\n}\n\nexport { RGBELoader };\n","import * as THREE from 'three';\n\nexport class Earth {\n    constructor({ loadingManager, texturePath }) {\n        console.log('Earth constructor called with:', { loadingManager, texturePath });\n        this.loadingManager = loadingManager;\n        this.texturePath = texturePath;\n        this.radius = 6.371; // Earth's radius in thousands of kilometers\n        this.rotationSpeed = 0.05; // Reduced rotation speed for smoother movement\n        this.group = new THREE.Group();\n        \n        // Create textures\n        this.textures = {\n            diffuse: null,\n            normal: null,\n            roughness: null,\n            specular: null,\n            night: null,\n            clouds: null,\n            height: null\n        };\n    }\n\n    async initialize() {\n        try {\n            console.log('Initializing Earth...');\n            \n            // Load all textures\n            const textureLoader = new THREE.TextureLoader(this.loadingManager);\n            console.log('TextureLoader created');\n            \n            // Load textures with proper color space and settings\n            console.log('Loading diffuse texture...');\n            this.textures.diffuse = await this.loadTexture(textureLoader, 'earth-day.jpg', { colorSpace: THREE.SRGBColorSpace });\n            console.log('Loading normal texture...');\n            this.textures.normal = await this.loadTexture(textureLoader, 'normal.jpg', { colorSpace: THREE.NoColorSpace });\n            console.log('Loading roughness texture...');\n            this.textures.roughness = await this.loadTexture(textureLoader, 'roughness.jpg', { colorSpace: THREE.NoColorSpace });\n            console.log('Loading specular texture...');\n            this.textures.specular = await this.loadTexture(textureLoader, 'specular.jpg', { colorSpace: THREE.SRGBColorSpace });\n            console.log('Loading night texture...');\n            this.textures.night = await this.loadTexture(textureLoader, 'earth-night.jpg', { colorSpace: THREE.SRGBColorSpace });\n            console.log('Loading clouds texture...');\n            this.textures.clouds = await this.loadTexture(textureLoader, 'earth-clouds-transparency.png', { \n                colorSpace: THREE.SRGBColorSpace,\n                transparent: true\n            });\n            console.log('Loading height texture...');\n            this.textures.height = await this.loadTexture(textureLoader, 'height.jpg', { colorSpace: THREE.NoColorSpace });\n\n            console.log('All textures loaded successfully');\n\n            // Create Earth geometry with reduced segments\n            const geometry = new THREE.SphereGeometry(this.radius, 64, 64); // Reduced from 128 to 64 segments\n            \n            // Create Earth material with optimized PBR settings\n            const earthMaterial = new THREE.MeshStandardMaterial({\n                map: this.textures.diffuse,\n                normalMap: this.textures.normal,\n                roughnessMap: this.textures.roughness,\n                metalnessMap: this.textures.specular,\n                normalScale: new THREE.Vector2(0.5, 0.5),\n                roughness: 0.7,\n                metalness: 0.1,\n                envMapIntensity: 1.0,\n                dithering: true // Enable dithering for smoother gradients\n            });\n\n            // Create night side material with optimized settings\n            const nightMaterial = new THREE.MeshStandardMaterial({\n                map: this.textures.night,\n                emissive: this.textures.night,\n                emissiveIntensity: 1.0,\n                transparent: true,\n                opacity: 0.8,\n                dithering: true\n            });\n\n            // Create Earth mesh with day/night materials\n            const earthMesh = new THREE.Mesh(geometry, earthMaterial);\n            const nightMesh = new THREE.Mesh(geometry, nightMaterial);\n            nightMesh.rotation.y = Math.PI;\n            \n            // Create cloud layer with reduced segments\n            const cloudGeometry = new THREE.SphereGeometry(this.radius + 0.1, 64, 64); // Reduced from 128 to 64 segments\n            const cloudMaterial = new THREE.MeshStandardMaterial({\n                map: this.textures.clouds,\n                transparent: true,\n                opacity: 0.4,\n                blending: THREE.AdditiveBlending,\n                depthWrite: false,\n                dithering: true\n            });\n            const cloudMesh = new THREE.Mesh(cloudGeometry, cloudMaterial);\n\n            // Enable frustum culling for better performance\n            earthMesh.frustumCulled = true;\n            nightMesh.frustumCulled = true;\n            cloudMesh.frustumCulled = true;\n\n            // Add meshes to group\n            console.log('Adding meshes to group...');\n            this.group.add(earthMesh);\n            this.group.add(nightMesh);\n            this.group.add(cloudMesh);\n\n            // Store references for animation\n            this.earthMesh = earthMesh;\n            this.nightMesh = nightMesh;\n            this.cloudMesh = cloudMesh;\n\n            // Position the Earth group\n            this.group.position.set(0, 0, 0);\n            console.log('Earth group position:', this.group.position);\n\n            console.log('Earth initialization complete');\n            return this.group;\n        } catch (error) {\n            console.error('Error initializing Earth:', error);\n            throw error;\n        }\n    }\n\n    async loadTexture(loader, filename, options = {}) {\n        try {\n            console.log(`Loading texture: ${filename}`);\n            const texture = await loader.loadAsync(`${this.texturePath}${filename}`);\n            console.log(`Texture loaded successfully: ${filename}`);\n            texture.colorSpace = options.colorSpace || THREE.SRGBColorSpace;\n            if (options.transparent) {\n                texture.transparent = true;\n            }\n            return texture;\n        } catch (error) {\n            console.error(`Error loading texture ${filename}:`, error);\n            console.log(`Creating fallback texture for ${filename}`);\n            return this.createFallbackTexture(options.colorSpace);\n        }\n    }\n\n    createFallbackTexture(colorSpace) {\n        console.log('Creating fallback texture');\n        const canvas = document.createElement('canvas');\n        canvas.width = 2;\n        canvas.height = 2;\n        const context = canvas.getContext('2d');\n        context.fillStyle = '#444444';\n        context.fillRect(0, 0, 2, 2);\n        \n        const texture = new THREE.CanvasTexture(canvas);\n        texture.colorSpace = colorSpace || THREE.SRGBColorSpace;\n        return texture;\n    }\n\n    update(delta) {\n        if (this.group) {\n            // Use a fixed time step for smoother rotation\n            const fixedDelta = Math.min(delta, 0.016); // Cap at 60fps equivalent\n            this.group.rotation.y += this.rotationSpeed * fixedDelta;\n            \n            // Rotate clouds with fixed time step\n            if (this.cloudMesh) {\n                this.cloudMesh.rotation.y += this.rotationSpeed * 1.2 * fixedDelta;\n            }\n        }\n    }\n\n    dispose() {\n        console.log('Disposing Earth component...');\n        // Dispose of all textures\n        Object.entries(this.textures).forEach(([name, texture]) => {\n            if (texture && texture.dispose) {\n                console.log(`Disposing texture: ${name}`);\n                texture.dispose();\n            }\n        });\n\n        // Dispose of geometries and materials\n        if (this.earthMesh) {\n            console.log('Disposing Earth mesh');\n            this.earthMesh.geometry.dispose();\n            this.earthMesh.material.dispose();\n        }\n        if (this.nightMesh) {\n            console.log('Disposing night mesh');\n            this.nightMesh.geometry.dispose();\n            this.nightMesh.material.dispose();\n        }\n        if (this.cloudMesh) {\n            console.log('Disposing cloud mesh');\n            this.cloudMesh.geometry.dispose();\n            this.cloudMesh.material.dispose();\n        }\n\n        // Clear the group\n        console.log('Clearing Earth group');\n        while (this.group.children.length > 0) {\n            this.group.remove(this.group.children[0]);\n        }\n    }\n} ","import * as THREE from 'three';\r\n\r\nexport class Starfield {\r\n    constructor(options = {}) {\r\n        this.options = {\r\n            starCount: 2000,\r\n            starSize: 0.1,\r\n            starColor: 0xffffff,\r\n            starBrightness: 1.0,\r\n            ...options\r\n        };\r\n\r\n        this.group = null;\r\n        this.material = null;\r\n        this.geometry = null;\r\n    }\r\n\r\n    async initialize() {\r\n        try {\r\n            console.log('Initializing Starfield...');\r\n            \r\n            // Create group\r\n            this.group = new THREE.Group();\r\n\r\n            // Create star geometry\r\n            this.geometry = new THREE.BufferGeometry();\r\n            const positions = new Float32Array(this.options.starCount * 3);\r\n            const colors = new Float32Array(this.options.starCount * 3);\r\n            const sizes = new Float32Array(this.options.starCount);\r\n\r\n            // Generate random star positions in a sphere\r\n            for (let i = 0; i < this.options.starCount; i++) {\r\n                const i3 = i * 3;\r\n                \r\n                // Random position in a sphere\r\n                const radius = 100 + Math.random() * 50; // Stars between 100 and 150 units away\r\n                const theta = Math.random() * Math.PI * 2;\r\n                const phi = Math.acos(2 * Math.random() - 1);\r\n                \r\n                positions[i3] = radius * Math.sin(phi) * Math.cos(theta);\r\n                positions[i3 + 1] = radius * Math.sin(phi) * Math.sin(theta);\r\n                positions[i3 + 2] = radius * Math.cos(phi);\r\n\r\n                // Random star color with slight variation\r\n                const color = new THREE.Color(this.options.starColor);\r\n                const brightness = 0.8 + Math.random() * 0.4; // Random brightness variation\r\n                colors[i3] = color.r * brightness;\r\n                colors[i3 + 1] = color.g * brightness;\r\n                colors[i3 + 2] = color.b * brightness;\r\n\r\n                // Random star size\r\n                sizes[i] = this.options.starSize * (0.5 + Math.random() * 1.5);\r\n            }\r\n\r\n            // Set attributes\r\n            this.geometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\r\n            this.geometry.setAttribute('color', new THREE.BufferAttribute(colors, 3));\r\n            this.geometry.setAttribute('size', new THREE.BufferAttribute(sizes, 1));\r\n\r\n            // Create material\r\n            this.material = new THREE.PointsMaterial({\r\n                size: this.options.starSize,\r\n                vertexColors: true,\r\n                transparent: true,\r\n                opacity: this.options.starBrightness,\r\n                sizeAttenuation: true,\r\n                blending: THREE.AdditiveBlending,\r\n                depthWrite: false\r\n            });\r\n\r\n            // Create points\r\n            const stars = new THREE.Points(this.geometry, this.material);\r\n            this.group.add(stars);\r\n\r\n            console.log('Starfield initialized successfully');\r\n            return this.group;\r\n        } catch (error) {\r\n            console.error('Error initializing Starfield:', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    update(delta) {\r\n        // Optional: Add subtle star twinkling effect\r\n        if (this.material) {\r\n            const time = Date.now() * 0.001;\r\n            this.material.opacity = this.options.starBrightness * (0.8 + Math.sin(time) * 0.2);\r\n        }\r\n    }\r\n\r\n    dispose() {\r\n        if (this.geometry) {\r\n            this.geometry.dispose();\r\n        }\r\n        if (this.material) {\r\n            this.material.dispose();\r\n        }\r\n        if (this.group) {\r\n            this.group.clear();\r\n            this.group = null;\r\n        }\r\n    }\r\n} ","import * as THREE from 'three';\n\nexport class SunGlow {\n    constructor(options = {}) {\n        this.options = {\n            color: 0xffffcc,\n            intensity: 1.0,\n            distance: 100,\n            decay: 2.0,\n            ...options\n        };\n\n        this.group = null;\n        this.light = null;\n        this.glowMesh = null;\n    }\n\n    async initialize() {\n        try {\n            console.log('Initializing SunGlow...');\n            \n            // Create group\n            this.group = new THREE.Group();\n\n            // Create point light\n            this.light = new THREE.PointLight(\n                this.options.color,\n                this.options.intensity,\n                this.options.distance,\n                this.options.decay\n            );\n            this.light.position.set(50, 20, 50);\n            this.group.add(this.light);\n\n            // Create glow mesh\n            const glowGeometry = new THREE.SphereGeometry(5, 32, 32);\n            const glowMaterial = new THREE.MeshBasicMaterial({\n                color: this.options.color,\n                transparent: true,\n                opacity: 0.3,\n                blending: THREE.AdditiveBlending,\n                side: THREE.BackSide\n            });\n\n            this.glowMesh = new THREE.Mesh(glowGeometry, this.light.position);\n            this.glowMesh.material = glowMaterial;\n            this.group.add(this.glowMesh);\n\n            // Add lens flare\n            const textureLoader = new THREE.TextureLoader();\n            const flareTexture = await new Promise((resolve, reject) => {\n                textureLoader.load(\n                    '/assets/sun/flare.png',\n                    resolve,\n                    undefined,\n                    reject\n                );\n            });\n\n            const flareMaterial = new THREE.SpriteMaterial({\n                map: flareTexture,\n                color: this.options.color,\n                transparent: true,\n                blending: THREE.AdditiveBlending\n            });\n\n            const flare = new THREE.Sprite(flareMaterial);\n            flare.scale.set(20, 20, 1);\n            flare.position.copy(this.light.position);\n            this.group.add(flare);\n\n            console.log('SunGlow initialized successfully');\n            return this.group;\n        } catch (error) {\n            console.error('Error initializing SunGlow:', error);\n            throw error;\n        }\n    }\n\n    update(delta) {\n        if (this.glowMesh) {\n            // Subtle pulsing effect\n            const time = Date.now() * 0.001;\n            const scale = 1 + Math.sin(time) * 0.1;\n            this.glowMesh.scale.set(scale, scale, scale);\n            \n            // Update glow opacity\n            this.glowMesh.material.opacity = 0.3 + Math.sin(time * 0.5) * 0.1;\n        }\n    }\n\n    dispose() {\n        if (this.glowMesh) {\n            this.glowMesh.geometry.dispose();\n            this.glowMesh.material.dispose();\n        }\n        if (this.group) {\n            this.group.clear();\n            this.group = null;\n        }\n    }\n} ","import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader.js';\nimport { Starfield } from '../entities/Starfield/Starfield.js';\nimport { SunGlow } from '../entities/SunGlow/SunGlow.js';\n\nexport class SceneManager {\n    constructor(container, loadingManager) {\n        console.log('SceneManager constructor called with container:', container);\n        if (!container || !(container instanceof HTMLElement)) {\n            throw new Error('Container must be a valid HTML element');\n        }\n        \n        if (!container.id) {\n            console.warn('Container element has no ID, this may cause issues with event handling');\n        }\n        \n        this.container = container;\n        this.loadingManager = loadingManager || new THREE.LoadingManager();\n        this.scene = null;\n        this.camera = null;\n        this.renderer = null;\n        this.controls = null;\n        this.clock = new THREE.Clock();\n        this.components = new Map();\n        this.eventHandlers = new Map();\n        this.isInitialized = false;\n        this.envMap = null;\n        this.isContextLost = false;\n        this.lastFrameTime = 0;\n\n        // Store container dimensions\n        this.containerWidth = container.clientWidth;\n        this.containerHeight = container.clientHeight;\n    }\n\n    async init() {\n        if (this.isInitialized) {\n            console.log('SceneManager already initialized');\n            return;\n        }\n\n        console.log('SceneManager init started');\n        try {\n            // Verify container is still valid\n            if (!this.container || !this.container.isConnected) {\n                throw new Error('Container element is no longer valid');\n            }\n\n            // Create scene\n            this.scene = new THREE.Scene();\n            this.scene.background = new THREE.Color(0x000000);\n            console.log('Scene created');\n\n            // Create camera with container dimensions\n            const aspect = this.containerWidth / this.containerHeight;\n            this.camera = new THREE.PerspectiveCamera(45, aspect, 0.1, 1000);\n            this.camera.position.set(0, 0, 20);\n            console.log('Camera created with aspect ratio:', aspect);\n\n            // Create renderer with balanced settings\n            this.renderer = new THREE.WebGLRenderer({\n                antialias: true,\n                alpha: true,\n                powerPreference: 'high-performance',\n                preserveDrawingBuffer: false,\n                precision: 'highp'\n            });\n\n            // Set renderer size and pixel ratio\n            this.renderer.setSize(this.containerWidth, this.containerHeight);\n            this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 1.5));\n            this.renderer.outputColorSpace = THREE.SRGBColorSpace;\n            this.renderer.toneMapping = THREE.ACESFilmicToneMapping;\n            this.renderer.toneMappingExposure = 1.2;\n            this.renderer.shadowMap.enabled = true;\n            this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n            this.renderer.physicallyCorrectLights = true;\n            this.renderer.outputEncoding = THREE.sRGBEncoding;\n\n            // Verify container is still valid before appending\n            if (!this.container.isConnected) {\n                throw new Error('Container element was removed from DOM');\n            }\n\n            // Append renderer to container\n            this.container.appendChild(this.renderer.domElement);\n            console.log('Renderer appended to container');\n\n            // Handle WebGL context loss\n            this.renderer.domElement.addEventListener('webglcontextlost', this.handleContextLost.bind(this), false);\n            this.renderer.domElement.addEventListener('webglcontextrestored', this.handleContextRestored.bind(this), false);\n\n            // Load HDRI environment map\n            console.log('Loading HDRI environment...');\n            const rgbeLoader = new RGBELoader(this.loadingManager);\n            this.envMap = await rgbeLoader.loadAsync('/assets/environment/space_hdri.hdr');\n            this.envMap.mapping = THREE.EquirectangularReflectionMapping;\n            this.scene.environment = this.envMap;\n            this.scene.background = this.envMap;\n            console.log('HDRI environment loaded');\n\n            // Create controls with smooth settings\n            this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n            this.controls.enableDamping = true;\n            this.controls.dampingFactor = 0.08;\n            this.controls.minDistance = 10;\n            this.controls.maxDistance = 50;\n            this.controls.maxPolarAngle = Math.PI * 0.95;\n            this.controls.rotateSpeed = 0.4;\n            this.controls.zoomSpeed = 0.6;\n            this.controls.enablePan = false;\n            this.controls.autoRotate = false;\n            this.controls.enableSmoothing = true;\n            this.controls.smoothTime = 0.3;\n            this.controls.update();\n            console.log('Controls created');\n\n            // Setup event listeners\n            window.addEventListener('resize', this.onResize.bind(this));\n            this.onResize();\n            console.log('Event listeners setup complete');\n\n            // Mark as initialized before adding components\n            this.isInitialized = true;\n\n            // Optimize lighting for realism\n            const ambientLight = new THREE.AmbientLight(0x404040, 0.3);\n            this.scene.add(ambientLight);\n\n            // Enhanced directional light for better shadows\n            const sunLight = new THREE.DirectionalLight(0xffffff, 1.2);\n            sunLight.position.set(50, 20, 50);\n            sunLight.castShadow = true;\n            \n            // Optimized shadow settings\n            sunLight.shadow.mapSize.width = 1024;\n            sunLight.shadow.mapSize.height = 1024;\n            sunLight.shadow.camera.near = 0.5;\n            sunLight.shadow.camera.far = 500;\n            sunLight.shadow.camera.left = -50;\n            sunLight.shadow.camera.right = 50;\n            sunLight.shadow.camera.top = 50;\n            sunLight.shadow.camera.bottom = -50;\n            sunLight.shadow.bias = -0.0001;\n            sunLight.shadow.normalBias = 0.02;\n            sunLight.shadow.radius = 1.5;\n            this.scene.add(sunLight);\n\n            // Add subtle rim light for better depth\n            const rimLight = new THREE.DirectionalLight(0x4040ff, 0.2);\n            rimLight.position.set(-50, -20, -50);\n            this.scene.add(rimLight);\n\n            // Start render loop\n            this.animate();\n            console.log('SceneManager initialization complete');\n        } catch (error) {\n            console.error('Error in SceneManager initialization:', error);\n            this.isInitialized = false;\n            throw error;\n        }\n    }\n\n    handleContextLost(event) {\n        event.preventDefault();\n        console.log('WebGL context lost');\n        this.isContextLost = true;\n    }\n\n    async handleContextRestored() {\n        console.log('WebGL context restored');\n        this.isContextLost = false;\n        \n        // Reinitialize components\n        for (const [name, component] of this.components) {\n            if (typeof component.initialize === 'function') {\n                try {\n                    await component.initialize();\n                } catch (error) {\n                    console.error(`Error reinitializing component ${name}:`, error);\n                }\n            }\n        }\n    }\n\n    onResize() {\n        if (!this.camera || !this.renderer) return;\n\n        const width = this.container.clientWidth;\n        const height = this.container.clientHeight;\n\n        this.camera.aspect = width / height;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize(width, height);\n    }\n\n    async addComponent(name, component) {\n        if (!this.isInitialized) {\n            throw new Error('SceneManager must be initialized before adding components');\n        }\n\n        console.log(`Adding component: ${name}`);\n        try {\n            if (this.components.has(name)) {\n                console.log(`Component ${name} already exists, removing old one`);\n                await this.removeComponent(name);\n            }\n            \n            if (typeof component.initialize === 'function') {\n                console.log(`Initializing component: ${name}`);\n                const result = await component.initialize();\n                if (result instanceof THREE.Object3D) {\n                    console.log(`Adding ${name} to scene`);\n                    this.scene.add(result);\n                }\n            }\n            \n            this.components.set(name, component);\n            console.log(`Component ${name} added successfully`);\n            return component;\n        } catch (error) {\n            console.error(`Error adding component ${name}:`, error);\n            throw error;\n        }\n    }\n\n    async removeComponent(name) {\n        console.log(`Removing component: ${name}`);\n        const component = this.components.get(name);\n        if (component) {\n            try {\n                if (typeof component.dispose === 'function') {\n                    await component.dispose();\n                }\n                this.components.delete(name);\n                console.log(`Component ${name} removed successfully`);\n            } catch (error) {\n                console.error(`Error removing component ${name}:`, error);\n                throw error;\n            }\n        }\n    }\n\n    update() {\n        if (!this.isInitialized || this.isContextLost) return;\n\n        const delta = Math.min(this.clock.getDelta(), 0.1);\n\n        // Update controls with smooth interpolation\n        if (this.controls && delta > 0) {\n            this.controls.update();\n        }\n        \n        // Update components with capped delta time\n        for (const component of this.components.values()) {\n            if (typeof component.update === 'function') {\n                try {\n                    component.update(delta);\n                } catch (error) {\n                    console.error('Error updating component:', error);\n                }\n            }\n        }\n        \n        // Render scene with post-processing if available\n        if (this.renderer && this.scene && this.camera && !this.isContextLost) {\n            this.renderer.render(this.scene, this.camera);\n        }\n    }\n\n    animate() {\n        if (!this.isInitialized) return;\n\n        // Use RAF with timestamp for better timing\n        requestAnimationFrame((timestamp) => {\n            this.animate();\n            // Throttle updates to maintain 60 FPS\n            if (timestamp - this.lastFrameTime >= 16.67) { // ~60 FPS\n                this.update();\n                this.lastFrameTime = timestamp;\n            }\n        });\n    }\n\n    async dispose() {\n        console.log('Disposing SceneManager');\n        try {\n            // Remove WebGL context event listeners\n            if (this.renderer && this.renderer.domElement) {\n                this.renderer.domElement.removeEventListener('webglcontextlost', this.handleContextLost);\n                this.renderer.domElement.removeEventListener('webglcontextrestored', this.handleContextRestored);\n            }\n\n            for (const [name, component] of this.components) {\n                await this.removeComponent(name);\n            }\n            \n            for (const [name, handler] of this.eventHandlers) {\n                window.removeEventListener(name, handler);\n            }\n            \n            if (this.controls) {\n                this.controls.dispose();\n            }\n            \n            if (this.renderer) {\n                this.renderer.dispose();\n                this.container.removeChild(this.renderer.domElement);\n            }\n            \n            this.components.clear();\n            this.eventHandlers.clear();\n            this.isInitialized = false;\n            console.log('SceneManager disposed successfully');\n        } catch (error) {\n            console.error('Error disposing SceneManager:', error);\n            throw error;\n        }\n    }\n}","import * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader.js';\r\nimport { Earth } from './entities/Earth/Earth.js';\r\nimport { SceneManager } from './core/SceneManager.js';\r\nimport { Starfield } from './entities/Starfield/Starfield.js';\r\nimport { SunGlow } from './entities/SunGlow/SunGlow.js';\r\n\r\nlet sceneManager = null;\r\nlet initializationAttempts = 0;\r\nconst MAX_INIT_ATTEMPTS = 3;\r\n\r\n// Add performance monitoring\r\nlet lastTime = performance.now();\r\nlet frames = 0;\r\n\r\nfunction updateFPS() {\r\n    const currentTime = performance.now();\r\n    frames++;\r\n    \r\n    if (currentTime - lastTime >= 1000) {\r\n        const fps = Math.round((frames * 1000) / (currentTime - lastTime));\r\n        console.log(`FPS: ${fps}`);\r\n        frames = 0;\r\n        lastTime = currentTime;\r\n    }\r\n    \r\n    requestAnimationFrame(updateFPS);\r\n}\r\n\r\nasync function init() {\r\n    try {\r\n        console.log('Starting application initialization...');\r\n        const container = document.getElementById('container');\r\n        if (!container) {\r\n            throw new Error('Container element not found');\r\n        }\r\n        console.log('Container found:', container);\r\n\r\n        // Create loading manager with better error handling\r\n        const loadingManager = new THREE.LoadingManager();\r\n        const progressBar = document.getElementById('loading-progress-bar');\r\n        const loadingText = document.getElementById('loading-text');\r\n\r\n        loadingManager.onProgress = (url, itemsLoaded, itemsTotal) => {\r\n            const progress = (itemsLoaded / itemsTotal) * 100;\r\n            progressBar.style.width = progress + '%';\r\n            loadingText.textContent = `Loading: ${Math.round(progress)}%`;\r\n            console.log(`Loading progress: ${progress.toFixed(2)}% - ${url}`);\r\n        };\r\n\r\n        loadingManager.onError = (url) => {\r\n            console.error('Error loading:', url);\r\n            showError(`Failed to load resource: ${url}. Please refresh the page.`);\r\n        };\r\n\r\n        loadingManager.onLoad = () => {\r\n            console.log('All resources loaded successfully');\r\n            hideLoading();\r\n        };\r\n\r\n        // Initialize scene manager with the container element directly\r\n        sceneManager = new SceneManager(container, loadingManager);\r\n        \r\n        console.log('Initializing SceneManager...');\r\n        await sceneManager.init();\r\n\r\n        // Add starfield\r\n        console.log('Adding starfield...');\r\n        const starfield = new Starfield({\r\n            starCount: 2000,\r\n            starSize: 0.1,\r\n            starColor: 0xffffff,\r\n            starBrightness: 1.0\r\n        });\r\n        await sceneManager.addComponent('starfield', starfield);\r\n\r\n        // Add sun glow\r\n        console.log('Adding sun glow...');\r\n        const sunGlow = new SunGlow({\r\n            color: 0xffffcc,\r\n            intensity: 1.0,\r\n            distance: 100,\r\n            decay: 2.0\r\n        });\r\n        await sceneManager.addComponent('sunGlow', sunGlow);\r\n        \r\n        // Add Earth component with balanced settings\r\n        console.log('Creating Earth component...');\r\n        const earth = new Earth({\r\n            loadingManager,\r\n            texturePath: '/assets/earth/',\r\n            options: {\r\n                enableShadows: true,\r\n                enablePostProcessing: true,\r\n                postProcessingQuality: 'medium',\r\n                geometryDetail: 'medium',\r\n                textureQuality: 'high',\r\n                enableAtmosphere: true,\r\n                atmosphereQuality: 'medium',\r\n                enableClouds: true,\r\n                cloudQuality: 'medium',\r\n                enableNightLights: true,\r\n                nightLightsQuality: 'medium',\r\n                rotationSpeed: 0.15,\r\n                enableAutoRotation: false,\r\n                atmosphereDensity: 0.8,\r\n                cloudOpacity: 0.7,\r\n                specularIntensity: 0.5,\r\n                roughness: 0.7,\r\n                metalness: 0.1,\r\n                enableOceanReflection: true,\r\n                oceanReflectionQuality: 'medium',\r\n                enableAtmosphericScattering: true,\r\n                enableSpecularHighlights: true,\r\n                enableNormalMapping: true,\r\n                enableRimLighting: true,\r\n                enableAmbientOcclusion: true,\r\n                aoQuality: 'medium'\r\n            }\r\n        });\r\n        \r\n        console.log('Adding Earth to scene...');\r\n        await sceneManager.addComponent('earth', earth);\r\n        \r\n        console.log('Initialization complete!');\r\n        initializationAttempts = 0;\r\n        \r\n    } catch (error) {\r\n        console.error('Initialization error:', error);\r\n        initializationAttempts++;\r\n        \r\n        if (initializationAttempts < MAX_INIT_ATTEMPTS) {\r\n            console.log(`Retrying initialization (attempt ${initializationAttempts + 1}/${MAX_INIT_ATTEMPTS})...`);\r\n            setTimeout(init, 1000); // Wait 1 second before retrying\r\n        } else {\r\n            showError('Failed to initialize Earth visualization. Please refresh the page or try again later.');\r\n        }\r\n    }\r\n}\r\n\r\nfunction showError(message) {\r\n    const errorElement = document.getElementById('error-message');\r\n    const loadingElement = document.getElementById('loading');\r\n    const progressElement = document.getElementById('loading-progress');\r\n    \r\n    errorElement.textContent = message;\r\n    errorElement.style.display = 'block';\r\n    loadingElement.style.display = 'none';\r\n    progressElement.style.display = 'none';\r\n}\r\n\r\nfunction hideLoading() {\r\n    const loadingElement = document.getElementById('loading');\r\n    const loadingText = document.getElementById('loading-text');\r\n    \r\n    loadingText.textContent = 'Loading complete!';\r\n    loadingElement.style.opacity = '0';\r\n    setTimeout(() => {\r\n        loadingElement.style.display = 'none';\r\n    }, 500);\r\n}\r\n\r\n// Start the application\r\nconsole.log('Starting application...');\r\ninit().catch(error => {\r\n    console.error('Fatal error during initialization:', error);\r\n    showError('Fatal error during initialization. Please refresh the page or try again later.');\r\n});\r\n\r\n// Cleanup on page unload\r\nwindow.addEventListener('unload', () => {\r\n    if (sceneManager) {\r\n        sceneManager.dispose();\r\n    }\r\n});\r\n\r\n// Start FPS monitoring\r\nupdateFPS(); "],"names":["_changeEvent","_startEvent","_endEvent","_ray","Ray","_plane","Plane","TILT_LIMIT","MathUtils","OrbitControls","EventDispatcher","object","domElement","Vector3","MOUSE","TOUCH","spherical","onKeyDown","scope","state","STATE","offset","quat","Quaternion","quatInverse","lastPosition","lastQuaternion","lastTargetPosition","twoPI","deltaTime","position","rotateLeft","getAutoRotationAngle","sphericalDelta","min","max","panOffset","zoomChanged","performCursorZoom","clampDistance","prevRadius","scale","newRadius","radiusDelta","dollyDirection","mouseBefore","mouse","prevZoom","mouseAfter","EPS","onContextMenu","onPointerDown","onPointerUp","onMouseWheel","onPointerMove","interceptControlDown","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","controlActive","getZoomScale","delta","normalizedDelta","angle","rotateUp","panLeft","v","distance","objectMatrix","panUp","pan","deltaX","deltaY","element","targetDistance","dollyOut","dollyScale","dollyIn","updateZoomParameters","x","y","rect","dx","dy","w","h","dist","handleMouseDownRotate","event","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","handleMouseWheel","handleKeyDown","needsUpdate","handleTouchStartRotate","getSecondPointerPosition","handleTouchStartPan","handleTouchStartDolly","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","handleTouchMovePan","handleTouchMoveDolly","centerX","centerY","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","isTrackingPointer","addPointer","onTouchStart","onMouseDown","onTouchMove","onMouseMove","removePointer","pointerId","mouseAction","customWheelEvent","mode","newEvent","interceptControlUp","trackPointer","i","RGBELoader","DataTextureLoader","manager","HalfFloatType","buffer","rgbe_error","rgbe_error_code","msg","NEWLINE","fgets","lineLimit","consume","p","len","s","chunk","RGBE_ReadHeader","magic_token_re","gamma_re","exposure_re","format_re","dimensions_re","header","line","match","RGBE_ReadPixels_RLE","scanline_width","data_rgba","pos","ptr_end","rgbeStart","scanline_buffer","num_scanlines","ptr","count","isEncodedRun","byteValue","l","off","RGBEByteToRGBFloat","sourceArray","sourceOffset","destArray","destOffset","e","RGBEByteToRGBHalf","DataUtils","byteArray","rgbe_header_info","image_rgba_data","data","type","numElements","FloatType","floatArray","j","halfArray","value","url","onLoad","onProgress","onError","onLoadCallback","texture","texData","LinearSRGBColorSpace","LinearFilter","Earth","loadingManager","texturePath","THREE.Group","textureLoader","THREE.TextureLoader","THREE.SRGBColorSpace","THREE.NoColorSpace","geometry","THREE.SphereGeometry","earthMaterial","THREE.MeshStandardMaterial","THREE.Vector2","nightMaterial","earthMesh","THREE.Mesh","nightMesh","cloudGeometry","cloudMaterial","THREE.AdditiveBlending","cloudMesh","error","loader","filename","options","colorSpace","canvas","context","THREE.CanvasTexture","fixedDelta","name","Starfield","THREE.BufferGeometry","positions","colors","sizes","i3","radius","theta","phi","color","THREE.Color","brightness","THREE.BufferAttribute","THREE.PointsMaterial","stars","THREE.Points","time","SunGlow","THREE.PointLight","glowGeometry","glowMaterial","THREE.MeshBasicMaterial","THREE.BackSide","flareTexture","resolve","reject","flareMaterial","THREE.SpriteMaterial","flare","THREE.Sprite","SceneManager","container","THREE.LoadingManager","THREE.Clock","THREE.Scene","aspect","THREE.PerspectiveCamera","THREE.WebGLRenderer","THREE.ACESFilmicToneMapping","THREE.PCFSoftShadowMap","THREE.sRGBEncoding","rgbeLoader","THREE.EquirectangularReflectionMapping","ambientLight","THREE.AmbientLight","sunLight","THREE.DirectionalLight","rimLight","component","width","height","result","THREE.Object3D","timestamp","handler","sceneManager","initializationAttempts","MAX_INIT_ATTEMPTS","lastTime","frames","updateFPS","currentTime","fps","init","progressBar","loadingText","itemsLoaded","itemsTotal","progress","showError","hideLoading","starfield","sunGlow","earth","message","errorElement","loadingElement","progressElement"],"mappings":"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","x_google_ignoreList":[0,1]}